{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulo\\\\Desktop\\\\Nova pasta\\\\front-end\\\\dondokas\\\\src\\\\pages\\\\Login\\\\login.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\"; // Importe o hook useNavigate\n// import { Link } from \"react-router-dom\";\n// import { getAuth, signInWithEmailAndPassword } from 'firebase/auth';  // Importação do Auth do Firebase\n\n// import axios from \"axios\";\n\n// const Login = () => {\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [error, setError] = useState(\"\");\n//     const [message, setMessage] = useState(\"\");\n//     const navigate = useNavigate(); // Utilize o hook useNavigate\n\n//     useEffect(() => {\n//         // Verificar se o usuário já está logado ao acessar a página de login\n//         const checkSession = async () => {\n//             try {\n//                 const response = await axios.get(\"http://localhost:8000/usuario/check-session\", {\n//                     withCredentials: true,\n//                 });\n\n//                 if (response.status === 200) {\n//                     navigate('/feedback');  // Redireciona para a página de feedback caso esteja logado\n//                 }\n//             } catch (error) {\n//                 // Se não estiver logado, continua na página de login\n//             }\n//         };\n\n//         checkSession();\n//     }, [navigate]);\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         try {\n//             // Inicializar o Firebase Auth\n//             const auth = getAuth();\n//             // Autenticar com Firebase\n//             const userCredential = await signInWithEmailAndPassword(auth, email, password);\n//             const user = userCredential.user;\n\n//             // Obter o token do Firebase para enviar para o backend\n//             const idToken = await user.getIdToken();\n\n//             // Enviar o token ao backend\n//             const response = await axios.post(\"http://localhost:8000/usuario/login\", { token: idToken }, {\n//                 withCredentials: true,  // Habilita o envio do cookie de sessão\n//                 headers: {\n//                     \"Content-Type\": \"application/json\",\n//                 },\n//             });\n\n//             setMessage(response.data.message);\n//             setError(\"\");\n\n//             // Redireciona para a página de feedback após o login\n//             navigate('/feedback');\n//         } catch (err) {\n//             setError(err.response?.data?.message || \"Erro ao fazer login\");\n//             console.error('Esse foi o erro que deu: ', err);\n//             setMessage(\"\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Login</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div>\n//                     <label htmlFor=\"email\">E-mail:</label>\n//                     <input\n//                         type=\"email\"\n//                         id=\"email\"\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n\n//                 <div>\n//                     <label htmlFor=\"password\">Senha:</label>\n//                     <input\n//                         type=\"password\"\n//                         id=\"password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n\n//                 <button type=\"submit\">Entrar</button>\n\n//                 {/* caso o usuário não tiver cadastro de a opção dele se cadastrar redirecionando para a página de register */}\n//                 <Link to=\"/register\">Cadastre-se</Link>\n//             </form>\n\n//             {message && setTimeout(() => {setMessage(\"\"); window.location.href = \"/\";}, 1000)}\n//             {error && <p style={{ color: \"red\" }}>{error}</p>}\n//         </div>\n//     );\n// };\n\n// export default Login;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport app from '../firebase-config'; // Importe a inicialização do Firebase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Inicializar o Firebase Auth\n      const auth = getAuth(app); // Certifique-se de passar a instância do app\n      // Autenticar com Firebase\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Obter o token do Firebase para enviar para o backend\n      const idToken = await user.getIdToken();\n\n      // Enviar o token ao backend\n      const response = await axios.post(\"http://localhost:8000/usuario/login\", {\n        token: idToken\n      }, {\n        withCredentials: true,\n        // Habilita o envio do cookie de sessão\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setMessage(response.data.message);\n      setError(\"\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Erro ao fazer login\");\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-mail:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Senha:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Cadastre-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), message && setTimeout(() => {\n      setMessage(\"\");\n      window.location.href = \"/\";\n    }, 1000), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"721QHv0Z5X8CmWYAJuZYCcc9XVY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","getAuth","signInWithEmailAndPassword","app","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","message","setMessage","handleSubmit","e","preventDefault","auth","userCredential","user","idToken","getIdToken","response","post","token","withCredentials","headers","data","err","_err$response","_err$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","to","setTimeout","window","location","href","style","color","_c","$RefreshReg$"],"sources":["C:/Users/paulo/Desktop/Nova pasta/front-end/dondokas/src/pages/Login/login.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\"; // Importe o hook useNavigate\r\n// import { Link } from \"react-router-dom\";\r\n// import { getAuth, signInWithEmailAndPassword } from 'firebase/auth';  // Importação do Auth do Firebase\r\n\r\n// import axios from \"axios\";\r\n\r\n// const Login = () => {\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const [error, setError] = useState(\"\");\r\n//     const [message, setMessage] = useState(\"\");\r\n//     const navigate = useNavigate(); // Utilize o hook useNavigate\r\n\r\n//     useEffect(() => {\r\n//         // Verificar se o usuário já está logado ao acessar a página de login\r\n//         const checkSession = async () => {\r\n//             try {\r\n//                 const response = await axios.get(\"http://localhost:8000/usuario/check-session\", {\r\n//                     withCredentials: true,\r\n//                 });\r\n\r\n//                 if (response.status === 200) {\r\n//                     navigate('/feedback');  // Redireciona para a página de feedback caso esteja logado\r\n//                 }\r\n//             } catch (error) {\r\n//                 // Se não estiver logado, continua na página de login\r\n//             }\r\n//         };\r\n\r\n//         checkSession();\r\n//     }, [navigate]);\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         try {\r\n//             // Inicializar o Firebase Auth\r\n//             const auth = getAuth();\r\n//             // Autenticar com Firebase\r\n//             const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n//             const user = userCredential.user;\r\n\r\n//             // Obter o token do Firebase para enviar para o backend\r\n//             const idToken = await user.getIdToken();\r\n\r\n//             // Enviar o token ao backend\r\n//             const response = await axios.post(\"http://localhost:8000/usuario/login\", { token: idToken }, {\r\n//                 withCredentials: true,  // Habilita o envio do cookie de sessão\r\n//                 headers: {\r\n//                     \"Content-Type\": \"application/json\",\r\n//                 },\r\n//             });\r\n\r\n//             setMessage(response.data.message);\r\n//             setError(\"\");\r\n\r\n//             // Redireciona para a página de feedback após o login\r\n//             navigate('/feedback');\r\n//         } catch (err) {\r\n//             setError(err.response?.data?.message || \"Erro ao fazer login\");\r\n//             console.error('Esse foi o erro que deu: ', err);\r\n//             setMessage(\"\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Login</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div>\r\n//                     <label htmlFor=\"email\">E-mail:</label>\r\n//                     <input\r\n//                         type=\"email\"\r\n//                         id=\"email\"\r\n//                         value={email}\r\n//                         onChange={(e) => setEmail(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n\r\n//                 <div>\r\n//                     <label htmlFor=\"password\">Senha:</label>\r\n//                     <input\r\n//                         type=\"password\"\r\n//                         id=\"password\"\r\n//                         value={password}\r\n//                         onChange={(e) => setPassword(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n\r\n//                 <button type=\"submit\">Entrar</button>\r\n\r\n//                 {/* caso o usuário não tiver cadastro de a opção dele se cadastrar redirecionando para a página de register */}\r\n//                 <Link to=\"/register\">Cadastre-se</Link>\r\n//             </form>\r\n\r\n//             {message && setTimeout(() => {setMessage(\"\"); window.location.href = \"/\";}, 1000)}\r\n//             {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport app from '../firebase-config';  // Importe a inicialização do Firebase\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Inicializar o Firebase Auth\r\n            const auth = getAuth(app);  // Certifique-se de passar a instância do app\r\n            // Autenticar com Firebase\r\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n            const user = userCredential.user;\r\n\r\n            // Obter o token do Firebase para enviar para o backend\r\n            const idToken = await user.getIdToken();\r\n\r\n            // Enviar o token ao backend\r\n            const response = await axios.post(\"http://localhost:8000/usuario/login\", { token: idToken }, {\r\n                withCredentials: true,  // Habilita o envio do cookie de sessão\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            });\r\n\r\n            setMessage(response.data.message);\r\n            setError(\"\");\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Erro ao fazer login\");\r\n            setMessage(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"email\">E-mail:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"password\">Senha:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <button type=\"submit\">Entrar</button>\r\n\r\n                <Link to=\"/register\">Cadastre-se</Link>\r\n            </form>\r\n\r\n            {message && setTimeout(() => {setMessage(\"\"); window.location.href = \"/\";}, 1000)}\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}