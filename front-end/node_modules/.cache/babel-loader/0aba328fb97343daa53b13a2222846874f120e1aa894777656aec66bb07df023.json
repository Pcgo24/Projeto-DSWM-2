{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulo\\\\Desktop\\\\Nova pasta\\\\front-end\\\\dondokas\\\\src\\\\pages\\\\Feedback\\\\feedback.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const Feedback = () => {\n//     const [feedbackText, setFeedbackText] = useState(\"\");\n//     const [message, setMessage] = useState(\"\");\n//     const [error, setError] = useState(\"\");\n//     const [feedbacks, setFeedbacks] = useState([]);\n\n//     // Função para buscar todos os feedbacks\n//     const fetchFeedbacks = async () => {\n//         try {\n//             const response = await axios.get(\"http://localhost:8000/usuario/feedback/all\");\n//             setFeedbacks(response.data); // Armazena os feedbacks no estado\n//         } catch (err) {\n//             console.error(\"Erro ao buscar feedbacks:\", err);\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchFeedbacks(); // Busca os feedbacks ao carregar a página\n//     }, []);\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         try {\n//             const response = await axios.post(\n//                 \"http://localhost:8000/usuario/feedback/create\",\n//                 { feedbackText },\n//                 { headers: { \"Content-Type\": \"application/json\" } }\n//             );\n\n//             setMessage(response.data.message);\n//             setError(\"\"); \n//             setFeedbackText(\"\"); \n\n//             fetchFeedbacks(); // Atualiza a lista de feedbacks após enviar um novo\n//         } catch (err) {\n//             setError(err.response?.data?.message || \"Erro ao enviar feedback\");\n//             setMessage(\"\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Deixe seu Feedback</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <div>\n//                     <label htmlFor=\"feedback\">Feedback:</label>\n//                     <textarea\n//                         id=\"feedback\"\n//                         value={feedbackText}\n//                         onChange={(e) => setFeedbackText(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n//                 <button type=\"submit\">Enviar Feedback</button>\n//             </form>\n\n//             {message && <p style={{ color: \"green\" }}>{message}</p>}\n//             {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n//             {/* de a opção de ir para a página home */}\n//             <Link to=\"/\">Ir para Home</Link>\n\n//             <h2>Feedbacks anteriores</h2>\n//             <ul>\n//                 {feedbacks.map((fb) => (\n//                     <li key={fb.id}>\n//                         <p><strong>Data:</strong> {fb.createdAt}</p>\n//                         <p>{fb.feedbackText}</p>\n//                         <hr />\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default Feedback;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./feedback.css\"; // Importando o arquivo CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feedback = () => {\n  _s();\n  const [feedbackText, setFeedbackText] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [feedbacks, setFeedbacks] = useState([]);\n  const fetchFeedbacks = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/usuario/feedback/all\");\n      setFeedbacks(response.data);\n    } catch (err) {\n      console.error(\"Erro ao buscar feedbacks:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchFeedbacks();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:8000/usuario/feedback/create\", {\n        feedbackText\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setMessage(response.data.message);\n      setError(\"\");\n      setFeedbackText(\"\");\n      fetchFeedbacks();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Erro ao enviar feedback\");\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Deixe seu Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"feedback\",\n        value: feedbackText,\n        onChange: e => setFeedbackText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feedback-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feedback-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Ir para Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Feedbacks anteriores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-card-container\",\n      children: feedbacks.map(fb => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 28\n          }, this), \" \", fb.createdAt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: fb.feedbackText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this)]\n      }, fb.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n_s(Feedback, \"v9yp5Uj/jM2W8lDYolqcBl7W44Y=\");\n_c = Feedback;\nexport default Feedback;\nvar _c;\n$RefreshReg$(_c, \"Feedback\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","jsxDEV","_jsxDEV","Feedback","_s","feedbackText","setFeedbackText","message","setMessage","error","setError","feedbacks","setFeedbacks","fetchFeedbacks","response","get","data","err","console","handleSubmit","e","preventDefault","post","headers","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","value","onChange","target","required","type","to","map","fb","createdAt","_c","$RefreshReg$"],"sources":["C:/Users/paulo/Desktop/Nova pasta/front-end/dondokas/src/pages/Feedback/feedback.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// const Feedback = () => {\r\n//     const [feedbackText, setFeedbackText] = useState(\"\");\r\n//     const [message, setMessage] = useState(\"\");\r\n//     const [error, setError] = useState(\"\");\r\n//     const [feedbacks, setFeedbacks] = useState([]);\r\n\r\n//     // Função para buscar todos os feedbacks\r\n//     const fetchFeedbacks = async () => {\r\n//         try {\r\n//             const response = await axios.get(\"http://localhost:8000/usuario/feedback/all\");\r\n//             setFeedbacks(response.data); // Armazena os feedbacks no estado\r\n//         } catch (err) {\r\n//             console.error(\"Erro ao buscar feedbacks:\", err);\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         fetchFeedbacks(); // Busca os feedbacks ao carregar a página\r\n//     }, []);\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         try {\r\n//             const response = await axios.post(\r\n//                 \"http://localhost:8000/usuario/feedback/create\",\r\n//                 { feedbackText },\r\n//                 { headers: { \"Content-Type\": \"application/json\" } }\r\n//             );\r\n\r\n//             setMessage(response.data.message);\r\n//             setError(\"\"); \r\n//             setFeedbackText(\"\"); \r\n\r\n//             fetchFeedbacks(); // Atualiza a lista de feedbacks após enviar um novo\r\n//         } catch (err) {\r\n//             setError(err.response?.data?.message || \"Erro ao enviar feedback\");\r\n//             setMessage(\"\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Deixe seu Feedback</h1>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div>\r\n//                     <label htmlFor=\"feedback\">Feedback:</label>\r\n//                     <textarea\r\n//                         id=\"feedback\"\r\n//                         value={feedbackText}\r\n//                         onChange={(e) => setFeedbackText(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 <button type=\"submit\">Enviar Feedback</button>\r\n//             </form>\r\n\r\n//             {message && <p style={{ color: \"green\" }}>{message}</p>}\r\n//             {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n//             {/* de a opção de ir para a página home */}\r\n//             <Link to=\"/\">Ir para Home</Link>\r\n\r\n//             <h2>Feedbacks anteriores</h2>\r\n//             <ul>\r\n//                 {feedbacks.map((fb) => (\r\n//                     <li key={fb.id}>\r\n//                         <p><strong>Data:</strong> {fb.createdAt}</p>\r\n//                         <p>{fb.feedbackText}</p>\r\n//                         <hr />\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Feedback;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./feedback.css\"; // Importando o arquivo CSS\r\n\r\nconst Feedback = () => {\r\n    const [feedbackText, setFeedbackText] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [feedbacks, setFeedbacks] = useState([]);\r\n\r\n    const fetchFeedbacks = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:8000/usuario/feedback/all\");\r\n            setFeedbacks(response.data);\r\n        } catch (err) {\r\n            console.error(\"Erro ao buscar feedbacks:\", err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchFeedbacks();\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                \"http://localhost:8000/usuario/feedback/create\",\r\n                { feedbackText },\r\n                { headers: { \"Content-Type\": \"application/json\" } }\r\n            );\r\n\r\n            setMessage(response.data.message);\r\n            setError(\"\"); \r\n            setFeedbackText(\"\"); \r\n            fetchFeedbacks();\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Erro ao enviar feedback\");\r\n            setMessage(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"feedback-container\">\r\n            <h1>Deixe seu Feedback</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea\r\n                    id=\"feedback\"\r\n                    value={feedbackText}\r\n                    onChange={(e) => setFeedbackText(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Enviar Feedback</button>\r\n            </form>\r\n\r\n            {message && <p className=\"feedback-message\">{message}</p>}\r\n            {error && <p className=\"feedback-error\">{error}</p>}\r\n\r\n            <Link to=\"/\">Ir para Home</Link>\r\n\r\n            <h2>Feedbacks anteriores</h2>\r\n            <div className=\"feedback-card-container\">\r\n                {feedbacks.map((fb) => (\r\n                    <div key={fb.id} className=\"feedback-card\">\r\n                        <p><strong>Data:</strong> {fb.createdAt}</p>\r\n                        <p>{fb.feedbackText}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Feedback;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}