{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulo\\\\Desktop\\\\Nova pasta\\\\front-end\\\\dondokas\\\\src\\\\pages\\\\Feedback\\\\feedback.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feedback = () => {\n  _s();\n  const [feedbackText, setFeedbackText] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:8000/usuario/feedback/create\", {\n        feedbackText\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setMessage(response.data.message);\n      setError(\"\"); // Limpa a mensagem de erro\n      setFeedbackText(\"\"); // Limpa o campo de feedback\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Erro ao enviar feedback\");\n      setMessage(\"\"); // Limpa a mensagem de sucesso\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Deixe seu Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"feedback\",\n          children: \"Feedback:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"feedback\",\n          value: feedbackText,\n          onChange: e => setFeedbackText(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Feedback, \"WvJBdrWNGqQ3cogIWLD2fWiIxN0=\");\n_c = Feedback;\nexport default Feedback;\nvar _c;\n$RefreshReg$(_c, \"Feedback\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Feedback","_s","feedbackText","setFeedbackText","message","setMessage","error","setError","handleSubmit","e","preventDefault","response","post","headers","data","err","_err$response","_err$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","required","type","style","color","_c","$RefreshReg$"],"sources":["C:/Users/paulo/Desktop/Nova pasta/front-end/dondokas/src/pages/Feedback/feedback.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Feedback = () => {\r\n    const [feedbackText, setFeedbackText] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                \"http://localhost:8000/usuario/feedback/create\",\r\n                { feedbackText },\r\n                { headers: { \"Content-Type\": \"application/json\" } }\r\n            );\r\n\r\n            setMessage(response.data.message);\r\n            setError(\"\"); // Limpa a mensagem de erro\r\n            setFeedbackText(\"\"); // Limpa o campo de feedback\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || \"Erro ao enviar feedback\");\r\n            setMessage(\"\"); // Limpa a mensagem de sucesso\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Deixe seu Feedback</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"feedback\">Feedback:</label>\r\n                    <textarea\r\n                        id=\"feedback\"\r\n                        value={feedbackText}\r\n                        onChange={(e) => setFeedbackText(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <button type=\"submit\">Enviar Feedback</button>\r\n            </form>\r\n\r\n            {message && <p style={{ color: \"green\" }}>{message}</p>}\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Feedback;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}